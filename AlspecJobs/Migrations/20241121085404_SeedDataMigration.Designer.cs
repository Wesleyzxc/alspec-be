// <auto-generated />
using AlspecBackend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlspecJobs.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241121085404_SeedDataMigration")]
    partial class SeedDataMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("AlspecBackend.Entities.Job", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = "job-1",
                            Description = "Description for Job 1",
                            Title = "Job 1 Title"
                        },
                        new
                        {
                            Id = "job-2",
                            Description = "Description for Job 2",
                            Title = "Job 2 Title"
                        });
                });

            modelBuilder.Entity("AlspecBackend.Entities.SubItem", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("JobId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.HasIndex("JobId");

                    b.HasIndex("JobId1");

                    b.ToTable("SubItems");

                    b.HasData(
                        new
                        {
                            ItemId = "item-1",
                            Description = "In progress sub item",
                            JobId = "job-1",
                            Status = "InProgress",
                            Title = "SubItem 1"
                        },
                        new
                        {
                            ItemId = "item-2",
                            Description = "Pending sub item",
                            JobId = "job-1",
                            Status = "Pending",
                            Title = "SubItem 2"
                        },
                        new
                        {
                            ItemId = "item-3",
                            Description = "Completed SubItem",
                            JobId = "job-2",
                            Status = "Completed",
                            Title = "SubItem 3"
                        });
                });

            modelBuilder.Entity("AlspecBackend.Entities.SubItem", b =>
                {
                    b.HasOne("AlspecBackend.Entities.Job", null)
                        .WithMany("SubItems")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlspecBackend.Entities.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId1");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("AlspecBackend.Entities.Job", b =>
                {
                    b.Navigation("SubItems");
                });
#pragma warning restore 612, 618
        }
    }
}
